using System;
using System.Configuration;
using System.Data.SqlClient;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;

namespace WebApplication1.User
{
    public partial class Userprofile : System.Web.UI.Page
    {
        // Controls are not explicitly declared here to prevent CS0102 error
        // They are automatically available from the designer file generated by the .aspx file

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                string userEmail = Session["UserEmail"] as string;

                if (!string.IsNullOrEmpty(userEmail))
                {
                    string connectionString = ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
                    string query = "SELECT name, age, gender, goal, weight, height FROM [dbo].[user] WHERE email = @email";

                    try
                    {
                        using (SqlConnection con = new SqlConnection(connectionString))
                        {
                            using (SqlCommand cmd = new SqlCommand(query, con))
                            {
                                cmd.Parameters.AddWithValue("@email", userEmail);
                                con.Open();
                                SqlDataReader reader = cmd.ExecuteReader();

                                if (reader.Read())
                                {
                                    txtEmail.Text = userEmail;
                                    txtName.Text = reader["name"] != DBNull.Value ? reader["name"].ToString() : string.Empty;
                                    txtAge.Text = reader["age"] != DBNull.Value ? reader["age"].ToString() : string.Empty;
                                    txtGender.Text = reader["gender"] != DBNull.Value ? reader["gender"].ToString() : string.Empty;

                                    string userGoal = reader["goal"] != DBNull.Value ? reader["goal"].ToString() : string.Empty;
                                    if (!string.IsNullOrEmpty(userGoal) && txtGoal.Items.FindByValue(userGoal) != null)
                                    {
                                        txtGoal.SelectedValue = userGoal;
                                    }

                                    txtWeight.Text = reader["weight"] != DBNull.Value ? reader["weight"].ToString() : string.Empty;
                                    txtHeight.Text = reader["height"] != DBNull.Value ? reader["height"].ToString() : string.Empty;
                                }
                                else
                                {
                                    ShowMessage("User not found in database.", false);
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        ShowMessage("An error occurred: " + ex.Message, false);
                    }
                }
            }
        }

        protected void btnUpdate_Click(object sender, EventArgs e)
        {
            string userEmail = Session["UserEmail"] as string;

            if (!string.IsNullOrEmpty(userEmail))
            {
                string connectionString = ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString;
                string query = "UPDATE [dbo].[user] SET name = @name, age = @age, gender = @gender, goal = @goal, weight = @weight, height = @height WHERE email = @email";

                try
                {
                    using (SqlConnection con = new SqlConnection(connectionString))
                    {
                        using (SqlCommand cmd = new SqlCommand(query, con))
                        {
                            cmd.Parameters.AddWithValue("@email", userEmail);
                            cmd.Parameters.AddWithValue("@name", txtName.Text);
                            cmd.Parameters.AddWithValue("@age", string.IsNullOrEmpty(txtAge.Text) ? (object)DBNull.Value : Convert.ToInt32(txtAge.Text));
                            cmd.Parameters.AddWithValue("@gender", txtGender.Text);
                            cmd.Parameters.AddWithValue("@goal", txtGoal.SelectedValue);
                            cmd.Parameters.AddWithValue("@weight", string.IsNullOrEmpty(txtWeight.Text) ? (object)DBNull.Value : Convert.ToInt32(txtWeight.Text));
                            cmd.Parameters.AddWithValue("@height", txtHeight.Text);

                            con.Open();
                            int rowsAffected = cmd.ExecuteNonQuery();

                            if (rowsAffected > 0)
                            {
                                ShowMessage("Profile updated successfully!", true);
                            }
                            else
                            {
                                ShowMessage("No profile was updated. User not found.", false);
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    ShowMessage("An error occurred during update: " + ex.Message, false);
                }
            }
        }

        private void ShowMessage(string message, bool isSuccess)
        {
            if (isSuccess)
            {
                messageContainer.InnerHtml = string.Format("<p class='message-container message-success'>{0}</p>", Server.HtmlEncode(message));
            }
            else
            {
                messageContainer.InnerHtml = string.Format("<p class='message-container message-error'>{0}</p>", Server.HtmlEncode(message));
            }
        }
    }
}
